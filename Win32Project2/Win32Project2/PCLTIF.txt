1,在quadNetwork的基础上迁移过来,最简化方法,ok
2,将像素分辨率和minxminy放入类里,ok
4,读入点云文件名,将点云数据集合放入成员变量中,ok
5,将三角化后的三角形集合当作成员变量,ok
6,基本上差不多了,输入参数只剩下点云名称和像素分辨率了.
7,对于一幅图像来说应该调用到最简单了,输入,处理一个函数,即可.其余参数均需返回值即可.
8,将读入点云的列数反过来,ok
9,以前的代码有误,更正了下,OK
10,加入了两种类型,一个是PCL:XYZ,一个是PCL:XYZI
12,将大点云超过400万像素的全部分块.

着顶点增多，三角化时间将以指数级增加。

1，根据栅格四至创建一个原始大图像，
2，对每块点云（如400万个点一组）进行三角化。将每块的坐标可以填入大vector里面,在小块对应的大vector的位置,赋值
3,用各小块填充的大块vector更新图像


2400万点点云，全部读耗时307秒，创建栅格0秒，给栅格二维赋值时间3秒，三角化时间8268秒，插值时间1462秒，更新网格时间94秒，共10423秒，约3小时。三角化时间已经指数级增加。占大头。
100万点云，读取耗时286秒，创建栅格0秒，二维栅格赋值时间1秒，三角化128秒，插值6秒，更新网格0秒，共421秒。（除读取点云外140秒）
200万点云，读取耗时285秒，创建栅格0秒，二维栅格赋值时间0秒，三角化368秒，插值11秒，更新网格0秒，共664秒。 （除读取点云外380秒） 三角化多了100秒
400万点云，读取耗时292秒，创建栅格0秒，二维栅格赋值时间0秒，三角化978秒，插值22秒，更新网格0秒，共1292秒。（除读取点云外1000秒）  三角化多了242秒
800万点云，读取耗时290秒，创建栅格0秒，二维栅格赋值时间1秒，三角化2253秒，插值45秒，更新网格0秒，共2590秒。（除读取点云外2300秒）  三角化多了300秒

点云数目每多一倍，三角化时间增为3倍，因此，重点在三角化上。减掉三角化耗时的时间是

插件9：36开始运行800万点，预计43分后，即10：19完成